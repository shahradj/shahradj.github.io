{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js!/home/shahrad/Documents/shahradj.github.io/src/store/settings.js","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/store/settings.js","mtime":1692676096737},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692676095757},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js","mtime":1692676095685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvc2hhaHJhZC9Eb2N1bWVudHMvc2hhaHJhZGouZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL2hvbWUvc2hhaHJhZC9Eb2N1bWVudHMvc2hhaHJhZGouZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgeyBzZXRDbGlja1Bhbiwgc2V0Q2xpY2tHYWluIH0gZnJvbSAnLi4vY2xpY2snOwppbXBvcnQgeyBpbml0TWlkaUV2ZW50cyB9IGZyb20gJy4uL21pZGknOwppbXBvcnQgeyBzZXRUcmFja0dhaW4sIHRyYWNrc1N0ZXJlb1Bhbm5lck5vZGUgfSBmcm9tICcuLi90cmFja3MnOwppbXBvcnQgeyBzZXQsIGdldCB9IGZyb20gJy4uL2RhdGFiYXNlJzsKdmFyIHN0b3JlID0gewogIHN0YXRlOiB7CiAgICB0cmFja1Bhbm5pbmc6IDAsCiAgICBjbGlja1Bhbm5pbmc6IDAsCiAgICBtaWRpRGV2aWNlTmFtZTogbnVsbCwKICAgIGNsaWNrR2FpblZhbHVlOiAxLAogICAgdHJhY2tHYWluVmFsdWU6IDEsCgogICAgLyoqCiAgICAgKiB7IFthY3Rpb25OYW1lXTogeyB0eXBlOiAnbm90ZScgfCAnY29udHJvbENoYW5nZScgfCAna2V5JywgdmFsdWU6IGFueSB9IH0KICAgICAqLwogICAgY29udHJvbEVkaXRNYXA6IHt9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRDb250cm9sTWFwcGluZzogZnVuY3Rpb24gZ2V0Q29udHJvbE1hcHBpbmcoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChjb250cm9sTmFtZSkgewogICAgICAgIHJldHVybiBzdGF0ZS5jb250cm9sRWRpdE1hcFtjb250cm9sTmFtZV07CiAgICAgIH07CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFRyYWNrUGFubmluZzogZnVuY3Rpb24gc2V0VHJhY2tQYW5uaW5nKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS50cmFja1Bhbm5pbmcgPSB2YWx1ZTsKICAgIH0sCiAgICBzZXRDbGlja1Bhbm5pbmc6IGZ1bmN0aW9uIHNldENsaWNrUGFubmluZyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgc3RhdGUuY2xpY2tQYW5uaW5nID0gdmFsdWU7CiAgICB9LAogICAgc2V0TWlkaURldmljZU5hbWU6IGZ1bmN0aW9uIHNldE1pZGlEZXZpY2VOYW1lKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS5taWRpRGV2aWNlTmFtZSA9IHZhbHVlOwogICAgfSwKICAgIHNldENvbnRyb2xFZGl0OiBmdW5jdGlvbiBzZXRDb250cm9sRWRpdChzdGF0ZSwgX3JlZikgewogICAgICB2YXIga2V5ID0gX3JlZi5rZXksCiAgICAgICAgICB2YWx1ZSA9IF9yZWYudmFsdWU7CiAgICAgIHN0YXRlLmNvbnRyb2xFZGl0TWFwW2tleV0gPSB2YWx1ZTsKICAgIH0sCiAgICBzZXRNYXN0ZXJUcmFja0dhaW5WYWx1ZTogZnVuY3Rpb24gc2V0TWFzdGVyVHJhY2tHYWluVmFsdWUoc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLnRyYWNrR2FpblZhbHVlID0gdmFsdWU7CiAgICB9LAogICAgc2V0Q2xpY2tHYWluVmFsdWU6IGZ1bmN0aW9uIHNldENsaWNrR2FpblZhbHVlKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS5jbGlja0dhaW5WYWx1ZSA9IHZhbHVlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgc2V0TWFzdGVyVHJhY2tHYWluVmFsdWU6IGZ1bmN0aW9uIHNldE1hc3RlclRyYWNrR2FpblZhbHVlKF9yZWYyLCB2YWx1ZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0LAogICAgICAgICAgcm9vdFN0YXRlID0gX3JlZjIucm9vdFN0YXRlLAogICAgICAgICAgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKICAgICAgY29tbWl0KCdzZXRNYXN0ZXJUcmFja0dhaW5WYWx1ZScsIHZhbHVlKTsKICAgICAgcm9vdFN0YXRlLnRyYWNrcy5mb3JFYWNoKGZ1bmN0aW9uICh0cmFjaykgewogICAgICAgIHJldHVybiBzZXRUcmFja0dhaW4odHJhY2ssIHN0YXRlLCByb290U3RhdGUpOwogICAgICB9KTsKICAgICAgc2F2ZVNldHRpbmdzKCk7CiAgICB9LAogICAgc2V0VHJhY2tQYW5uaW5nOiBmdW5jdGlvbiBzZXRUcmFja1Bhbm5pbmcoX3JlZjMsIHZhbHVlKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0VHJhY2tQYW5uaW5nJywgdmFsdWUpOwogICAgICB0cmFja3NTdGVyZW9QYW5uZXJOb2RlLnBhbi52YWx1ZSA9IHZhbHVlOwogICAgICBzYXZlU2V0dGluZ3MoKTsKICAgIH0sCiAgICBzZXRDbGlja1Bhbm5pbmc6IGZ1bmN0aW9uIHNldENsaWNrUGFubmluZyhfcmVmNCwgdmFsdWUpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgY29tbWl0KCdzZXRDbGlja1Bhbm5pbmcnLCB2YWx1ZSk7CiAgICAgIHNldENsaWNrUGFuKHZhbHVlKTsKICAgICAgc2F2ZVNldHRpbmdzKCk7CiAgICB9LAogICAgc2V0TWlkaURldmljZU5hbWU6IGZ1bmN0aW9uIHNldE1pZGlEZXZpY2VOYW1lKF9yZWY1LCB2YWx1ZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0LAogICAgICAgICAgcm9vdFN0YXRlID0gX3JlZjUucm9vdFN0YXRlLAogICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaDsKICAgICAgY29tbWl0KCdzZXRNaWRpRGV2aWNlTmFtZScsIHZhbHVlKTsKICAgICAgaW5pdE1pZGlFdmVudHModmFsdWUsIHsKICAgICAgICByb290U3RhdGU6IHJvb3RTdGF0ZSwKICAgICAgICBkaXNwYXRjaDogZGlzcGF0Y2gKICAgICAgfSk7CiAgICAgIHNhdmVTZXR0aW5ncygpOwogICAgfSwKICAgIHNldENvbnRyb2xFZGl0OiBmdW5jdGlvbiBzZXRDb250cm9sRWRpdChfcmVmNiwgX3JlZjcpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY2LmNvbW1pdCwKICAgICAgICAgIHJvb3RTdGF0ZSA9IF9yZWY2LnJvb3RTdGF0ZTsKICAgICAgdmFyIHR5cGUgPSBfcmVmNy50eXBlLAogICAgICAgICAgdmFsdWUgPSBfcmVmNy52YWx1ZTsKICAgICAgY29tbWl0KCdzZXRDb250cm9sRWRpdCcsIHsKICAgICAgICBrZXk6IHJvb3RTdGF0ZS5jb250cm9sRWRpdFNlbGVjdGVkLAogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgICAgfQogICAgICB9KTsKICAgICAgc2F2ZVNldHRpbmdzKCk7CiAgICB9LAogICAgc2V0Q2xpY2tHYWluVmFsdWU6IGZ1bmN0aW9uIHNldENsaWNrR2FpblZhbHVlKF9yZWY4LCB2YWx1ZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgICBjb21taXQoJ3NldENsaWNrR2FpblZhbHVlJywgdmFsdWUpOwogICAgICBzZXRDbGlja0dhaW4odmFsdWUpOwogICAgICBzYXZlU2V0dGluZ3MoKTsKICAgIH0sCiAgICB0cmlnZ2VyQ29udHJvbEFjdGlvbjogZnVuY3Rpb24gdHJpZ2dlckNvbnRyb2xBY3Rpb24oX3JlZjksIGV2ZW50VmFsdWUpIHsKICAgICAgdmFyIHN0YXRlID0gX3JlZjkuc3RhdGUsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY5LmRpc3BhdGNoOwogICAgICBPYmplY3QuZW50cmllcyhzdGF0ZS5jb250cm9sRWRpdE1hcCkuZmluZChmdW5jdGlvbiAoX3JlZjEwKSB7CiAgICAgICAgdmFyIF9yZWYxMSA9IF9zbGljZWRUb0FycmF5KF9yZWYxMCwgMiksCiAgICAgICAgICAgIGFjdGlvbiA9IF9yZWYxMVswXSwKICAgICAgICAgICAgbWFwVmFsdWUgPSBfcmVmMTFbMV07CgogICAgICAgIGlmIChtYXBWYWx1ZS50eXBlID09PSBldmVudFZhbHVlLnR5cGUgJiYgbWFwVmFsdWUudmFsdWUgPT09IGV2ZW50VmFsdWUudmFsdWUpIHsKICAgICAgICAgIGRpc3BhdGNoKGFjdGlvbik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBpbml0U2V0dGluZ3M6IGZ1bmN0aW9uIGluaXRTZXR0aW5ncyhfcmVmMTIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc3RhdGUsIGRpc3BhdGNoLCByb290U3RhdGUsIHNldHRpbmdzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjEyLnN0YXRlLCBkaXNwYXRjaCA9IF9yZWYxMi5kaXNwYXRjaCwgcm9vdFN0YXRlID0gX3JlZjEyLnJvb3RTdGF0ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldCgnc2V0dGluZ3MnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgc2V0dGluZ3MgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgc2V0dGluZ3MpOwoKICAgICAgICAgICAgICAgIGlmIChzdGF0ZS5taWRpRGV2aWNlTmFtZSkgewogICAgICAgICAgICAgICAgICBpbml0TWlkaUV2ZW50cyhzdGF0ZS5taWRpRGV2aWNlTmFtZSwgewogICAgICAgICAgICAgICAgICAgIHJvb3RTdGF0ZTogcm9vdFN0YXRlLAogICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTsKCmZ1bmN0aW9uIHNhdmVTZXR0aW5ncygpIHsKICBzZXQoJ3NldHRpbmdzJywgc3RvcmUuc3RhdGUpOwp9CgpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/home/shahrad/Documents/shahradj.github.io/src/store/settings.js"],"names":["setClickPan","setClickGain","initMidiEvents","setTrackGain","tracksStereoPannerNode","set","get","store","state","trackPanning","clickPanning","midiDeviceName","clickGainValue","trackGainValue","controlEditMap","getters","getControlMapping","controlName","mutations","setTrackPanning","value","setClickPanning","setMidiDeviceName","setControlEdit","key","setMasterTrackGainValue","setClickGainValue","actions","commit","rootState","tracks","forEach","track","saveSettings","pan","dispatch","type","controlEditSelected","triggerControlAction","eventValue","Object","entries","find","action","mapValue","initSettings","settings","assign"],"mappings":"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","sourcesContent":["import { setClickPan, setClickGain } from '../click';\nimport { initMidiEvents } from '../midi';\nimport { setTrackGain, tracksStereoPannerNode } from '../tracks';\nimport { set, get } from '../database';\n\nconst store = {\n  state: {\n    trackPanning: 0,\n    clickPanning: 0,\n    midiDeviceName: null,\n    clickGainValue: 1,\n    trackGainValue: 1,\n    /**\n     * { [actionName]: { type: 'note' | 'controlChange' | 'key', value: any } }\n     */\n    controlEditMap: {}\n  },\n  getters: {\n    getControlMapping(state) {\n      return controlName => state.controlEditMap[controlName];\n    }\n  },\n  mutations: {\n    setTrackPanning(state, value) {\n      state.trackPanning = value;\n    },\n    setClickPanning(state, value) {\n      state.clickPanning = value;\n    },\n    setMidiDeviceName(state, value) {\n      state.midiDeviceName = value;\n    },\n    setControlEdit(state, { key, value }) {\n      state.controlEditMap[key] = value;\n    },\n    setMasterTrackGainValue(state, value) {\n      state.trackGainValue = value;\n    },\n    setClickGainValue(state, value) {\n      state.clickGainValue = value;\n    }\n  },\n  actions: {\n    setMasterTrackGainValue({ commit, rootState, state }, value) {\n      commit('setMasterTrackGainValue', value);\n      rootState.tracks.forEach(track => setTrackGain(track, state, rootState));\n      saveSettings();\n    },\n    setTrackPanning({ commit }, value) {\n      commit('setTrackPanning', value);\n      tracksStereoPannerNode.pan.value = value;\n      saveSettings();\n    },\n    setClickPanning({ commit }, value) {\n      commit('setClickPanning', value);\n      setClickPan(value);\n      saveSettings();\n    },\n    setMidiDeviceName({ commit, rootState, dispatch }, value) {\n      commit('setMidiDeviceName', value);\n      initMidiEvents(value, { rootState, dispatch });\n      saveSettings();\n    },\n    setControlEdit({ commit, rootState }, { type, value }) {\n      commit('setControlEdit', {\n        key: rootState.controlEditSelected,\n        value: { type, value }\n      });\n      saveSettings();\n    },\n    setClickGainValue({ commit }, value) {\n      commit('setClickGainValue', value);\n      setClickGain(value);\n      saveSettings();\n    },\n    triggerControlAction({ state, dispatch }, eventValue) {\n      Object.entries(state.controlEditMap).find(([action, mapValue]) => {\n        if (\n          mapValue.type === eventValue.type &&\n          mapValue.value === eventValue.value\n        ) {\n          dispatch(action);\n        }\n      });\n    },\n    async initSettings({ state, dispatch, rootState }) {\n      const settings = await get('settings');\n      Object.assign(state, settings);\n      if (state.midiDeviceName) {\n        initMidiEvents(state.midiDeviceName, { rootState, dispatch });\n      }\n    }\n  }\n};\n\nfunction saveSettings() {\n  set('settings', store.state);\n}\n\nexport default store;\n"]}]}