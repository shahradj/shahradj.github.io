{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js!/home/shahrad/Documents/shahradj.github.io/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shahrad/Documents/shahradj.github.io/src/components/SongManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/components/SongManager.vue","mtime":1692680536964},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692677374760},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js","mtime":1692677374684},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vuetify-loader/lib/loader.js","mtime":1692677375528},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692677374760},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js","mtime":1692677375504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5sYXN0LWluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiL2hvbWUvc2hhaHJhZC9Eb2N1bWVudHMvc2hhaHJhZGouZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBUcmFjayBmcm9tICcuL1RyYWNrJzsKaW1wb3J0IFNvbmcgZnJvbSAnLi9Tb25nJzsKaW1wb3J0IERyb3Bkb3duIGZyb20gJ3Z1ZS1zaW1wbGUtc2VhcmNoLWRyb3Bkb3duJzsKdmFyIGZpbGVzID0gW3sKICAnaWQnOiAxLAogICduYW1lJzogJ3Rlc3QxJywKICAnZmlsZXMnOiBbJ3Rlc3RhLm1wMycsICd0ZXN0Yi5tcDMnLCAndGVzdGMubXAzJywgJ3Rlc3RkLm1wMyddCn0sIHsKICAnaWQnOiAyLAogICduYW1lJzogJ3Rlc3QyJywKICAnZmlsZXMnOiBbXQp9XTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERyb3Bkb3duOiBEcm9wZG93biwKICAgIFRyYWNrOiBUcmFjaywKICAgIFNvbmc6IFNvbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlczogW10sCiAgICAgIG9wdGlvbnM6IGZpbGVzCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWRkVHJhY2tzOiBmdW5jdGlvbiBhZGRUcmFja3MoZmlsZXMpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghZmlsZXMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBmaWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgICAgdmFyIG5hbWUgPSBmaWxlLm5hbWUuc3Vic3RyaW5nKDAsIGZpbGUubmFtZS5sYXN0SW5kZXhPZignLicpKTsKICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihmaWxlKTsKICAgICAgICBmaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZFRyYWNrJywgewogICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICBhcnJheUJ1ZmZlcjogZmlsZVJlYWRlci5yZXN1bHQKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgfSwKICAgIHZhbGlkYXRlU2VsZWN0aW9uOiBmdW5jdGlvbiB2YWxpZGF0ZVNlbGVjdGlvbihldmVudCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmIChldmVudCkgewogICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmZpbGVzKTsKICAgICAgICBldmVudC5maWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgICAgICB2YXIgbmFtZSA9ICdodHRwczovL2dpdGh1Yi5jb20vc2hhaHJhZGovc2hhaHJhZGouZ2l0aHViLmlvL2Jsb2IvbWFzdGVyL2RhdGEvJyArIGV2ZW50Lm5hbWUgKyAnLycgKyBmaWxlICsgJz9yYXc9dHJ1ZSc7CiAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICB2YXIgZmlsZWNvbnRlbnQgPSBmZXRjaChuYW1lKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgcmV0dXJuIHJlcy5ibG9iKCk7CiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnNvbGUubG9nKF90eXBlb2YoZmlsZWNvbnRlbnQpKTsKICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlY29udGVudCk7CiAgICAgICAgICBmaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goJ2FkZFRyYWNrJywgewogICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgYXJyYXlCdWZmZXI6IGZpbGVSZWFkZXIucmVzdWx0CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SongManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,QAAA,MAAA,4BAAA;AAEA,IAAA,KAAA,GAAA,CACA;AAAA,QAAA,CAAA;AACA,UAAA,OADA;AAEA,WAAA,CACA,WADA,EAEA,WAFA,EAGA,WAHA,EAIA,WAJA;AAFA,CADA,EAUA;AAAA,QAAA,CAAA;AACA,UAAA,OADA;AAEA,WAAA;AAFA,CAVA,CAAA;AAiBA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,IAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AAAA;;AACA,UAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA;AACA;;AAEA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA;AACA,YAAA,UAAA,GAAA,IAAA,UAAA,EAAA;AACA,QAAA,UAAA,CAAA,iBAAA,CAAA,IAAA;AACA,QAAA,UAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,YAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,WAAA,EAAA,UAAA,CAAA;AAFA,WAAA;AAIA,SALA;AAMA,OAVA;AAWA,WAAA,KAAA,GAAA,EAAA;AACA,KAlBA;AAmBA,IAAA,iBAnBA,6BAmBA,KAnBA,EAmBA;AAAA;;AACA,UAAA,KAAA,EAAA;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA;AAEA,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,IAAA,GAAA,qEAAA,KAAA,CAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,WAAA;AACA,cAAA,UAAA,GAAA,IAAA,UAAA,EAAA;AACA,cAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA;AAAA,mBAAA,GAAA,CAAA,IAAA,EAAA;AAAA,WAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,SAAA,WAAA;AACA,UAAA,UAAA,CAAA,aAAA,CAAA,WAAA;AACA,UAAA,UAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,YAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AACA,cAAA,IAAA,EAAA,IADA;AAEA,cAAA,WAAA,EAAA,UAAA,CAAA;AAFA,aAAA;AAIA,WALA;AAMA,SAZA;AAaA,aAAA,KAAA,GAAA,EAAA;AACA;AACA;AAvCA;AAZA,CAAA","sourcesContent":["<template>\n  <div>\n    <Dropdown\n      :options=\"options\"\n      v-on:selected=\"validateSelection\"\n      :disabled=\"false\"\n      name=\"song\"\n      :maxItem=\"10\"\n      placeholder=\"Please select a song\"\n    >\n    </Dropdown>\n    <VFileInput\n      label=\"Tracks\"\n      @change=\"addTracks\"\n      :value=\"files\"\n      multiple\n      placeholder=\"Add audio files\"\n      accept=\"audio/*\"\n    />\n    <!-- <Song\n      v-for=\"(track, index) in $store.state.songs\"\n      :track=\"track\"\n      :number=\"index + 1\"\n      :key=\"track.id\"\n    /> -->\n  </div>\n</template>\n\n<script>\nimport Track from './Track';\nimport Song from './Song';\nimport Dropdown from 'vue-simple-search-dropdown';\n\nvar files = [\n  {'id':1,\n  'name':'test1',\n  'files': [\n    'testa.mp3',\n    'testb.mp3',\n    'testc.mp3',\n    'testd.mp3'\n  ]\n}, \n{'id':2,\n'name':'test2',\n'files': [\n\n]}\n]\n\nexport default {\n  components: {\n    Dropdown,\n    Track,\n    Song\n  },\n  data() {\n    return {\n      files: [],\n      options: files\n    };\n  },\n  methods: {\n    addTracks(files) {\n      if (!files.length) {\n        return;\n      }\n\n      files.forEach(file => {\n        const name = file.name.substring(0, file.name.lastIndexOf('.'));\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n        fileReader.addEventListener('load', () => {\n          this.$store.dispatch('addTrack', {\n            name,\n            arrayBuffer: fileReader.result\n          });\n        });\n      });\n      this.files = [];\n    },\n    validateSelection(event) {\n      if (event) {\n        \n        console.log(event.files);\n\n        event.files.forEach(file => {\n          const name = 'https://github.com/shahradj/shahradj.github.io/blob/master/data/'+event.name+'/'+file+'?raw=true';\n          const fileReader = new FileReader();\n          const filecontent = fetch(name).then(res => res.blob())\n          console.log(typeof(filecontent))\n          fileReader.readAsDataURL(filecontent);\n          fileReader.addEventListener('load', () => {\n            this.$store.dispatch('addTrack', {\n              name,\n              arrayBuffer: fileReader.result\n            });\n          });\n        });\n        this.files = [];\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}