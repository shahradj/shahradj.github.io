{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/thread-loader/dist/cjs.js!/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js!/home/shahrad/Documents/shahradj.github.io/src/store/index.js","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/store/index.js","mtime":1692674948142},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692674947046},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/thread-loader/dist/cjs.js","mtime":1692674947858},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js","mtime":1692674946962}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}