{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js!/home/shahrad/Documents/shahradj.github.io/src/click.js","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/click.js","mtime":1692676096737},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692676095757},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js","mtime":1692676095685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NoYWhyYWQvRG9jdW1lbnRzL3NoYWhyYWRqLmdpdGh1Yi5pby9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKdmFyIGF1ZGlvQ29udGV4dCA9IG5ldyBBdWRpb0NvbnRleHQoKTsKdmFyIHN0ZXJlb1Bhbm5lck5vZGUgPSBuZXcgU3RlcmVvUGFubmVyTm9kZShhdWRpb0NvbnRleHQsIHsKICBwYW46IDAKfSk7CnZhciBnYWluTm9kZSA9IGF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7CnZhciBhdWRpb0J1ZmZlciA9IG51bGw7CnZhciB1cEF1ZGlvQnVmZmVyID0gbnVsbDsKdmFyIGV2ZW50TG9vcENvdW50ID0gMDsgLy8gRmV0Y2ggY2xpY2sgYXVkaW8gZmlsZXMKCmV4cG9ydCBmdW5jdGlvbiBpbml0Q2xpY2soKSB7CiAgcmV0dXJuIF9pbml0Q2xpY2suYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2luaXRDbGljaygpIHsKICBfaW5pdENsaWNrID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIGNsaWNrLCBjbGlja0FycmF5QnVmZmVyLCBjbGlja1VwLCBjbGlja1VwQXJyYXlCdWZmZXI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZmV0Y2goJy4vY2xpY2sud2F2Jyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjbGljayA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gY2xpY2suYXJyYXlCdWZmZXIoKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNsaWNrQXJyYXlCdWZmZXIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCcuL2NsaWNrLWFjY2VudC53YXYnKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNsaWNrVXAgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgIHJldHVybiBjbGlja1VwLmFycmF5QnVmZmVyKCk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2xpY2tVcEFycmF5QnVmZmVyID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgIGF1ZGlvQ29udGV4dC5kZWNvZGVBdWRpb0RhdGEoY2xpY2tBcnJheUJ1ZmZlciwgZnVuY3Rpb24gKF8pIHsKICAgICAgICAgICAgICAgIGF1ZGlvQnVmZmVyID0gXzsKICAgICAgICAgICAgICAgIGF1ZGlvQ29udGV4dC5kZWNvZGVBdWRpb0RhdGEoY2xpY2tVcEFycmF5QnVmZmVyLCBmdW5jdGlvbiAoXykgewogICAgICAgICAgICAgICAgICB1cEF1ZGlvQnVmZmVyID0gXzsKICAgICAgICAgICAgICAgICAgcmVzKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfaW5pdENsaWNrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBjbGlja0V2ZW50TG9vcChzdG9yZSkgewogIHZhciBfc3RvcmUkc3RhdGUkY2xpY2tUaW0gPSBzdG9yZS5zdGF0ZS5jbGlja1RpbWVTaWduYXR1cmUsCiAgICAgIGJlYXRzID0gX3N0b3JlJHN0YXRlJGNsaWNrVGltLmJlYXRzLAogICAgICB1bml0ID0gX3N0b3JlJHN0YXRlJGNsaWNrVGltLnVuaXQ7CgogIGlmICghYmVhdHMgfHwgIXVuaXQpIHsKICAgIHJldHVybjsKICB9CgogIHZhciBjbGlja0ludGVydmFsID0gZ2V0Q2xpY2tJbnRlcnZhbChzdG9yZS5zdGF0ZSk7CgogIGlmIChzdG9yZS5zdGF0ZS5wbGF5UG9zaXRpb24gLyBldmVudExvb3BDb3VudCA+IGNsaWNrSW50ZXJ2YWwpIHsKICAgIHZhciBidWZmZXJTb3VyY2UgPSBhdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7CiAgICBidWZmZXJTb3VyY2UuY29ubmVjdChnYWluTm9kZSkuY29ubmVjdChzdGVyZW9QYW5uZXJOb2RlKS5jb25uZWN0KGF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7CgogICAgaWYgKGV2ZW50TG9vcENvdW50ICUgYmVhdHMgPT09IDApIHsKICAgICAgYnVmZmVyU291cmNlLmJ1ZmZlciA9IHVwQXVkaW9CdWZmZXI7CiAgICAgIGJ1ZmZlclNvdXJjZS5zdGFydCgpOwogICAgfSBlbHNlIHsKICAgICAgYnVmZmVyU291cmNlLmJ1ZmZlciA9IGF1ZGlvQnVmZmVyOwogICAgICBidWZmZXJTb3VyY2Uuc3RhcnQoKTsKICAgIH0KCiAgICBldmVudExvb3BDb3VudCsrOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gc2V0Q2xpY2tQYW4odmFsdWUpIHsKICBzdGVyZW9QYW5uZXJOb2RlLnBhbi52YWx1ZSA9IHZhbHVlOwp9CmV4cG9ydCBmdW5jdGlvbiBzZXRDbGlja0V2ZW50TG9vcENvdW50KGNvdW50KSB7CiAgZXZlbnRMb29wQ291bnQgPSBjb3VudDsKfQpleHBvcnQgZnVuY3Rpb24gc2V0Q2xpY2tHYWluKHZhbHVlKSB7CiAgZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IHZhbHVlOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRDbGlja0ludGVydmFsKHN0YXRlKSB7CiAgcmV0dXJuIDYwIC8gKHN0YXRlLmNsaWNrQnBtICogKHN0YXRlLmNsaWNrVGltZVNpZ25hdHVyZS51bml0IC8gNCkpOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXRDbGlja0JlYXRzKHN0YXRlKSB7CiAgdmFyIGJlYXRzID0gTWF0aC5mbG9vcihzdGF0ZS5wbGF5UG9zaXRpb24gLyBnZXRDbGlja0ludGVydmFsKHN0YXRlKSk7CiAgcmV0dXJuIFtNYXRoLmZsb29yKGJlYXRzIC8gc3RhdGUuY2xpY2tUaW1lU2lnbmF0dXJlLmJlYXRzKSwgYmVhdHMgJSBzdGF0ZS5jbGlja1RpbWVTaWduYXR1cmUuYmVhdHMgKyAxXTsKfQ=="},{"version":3,"sources":["/home/shahrad/Documents/shahradj.github.io/src/click.js"],"names":["audioContext","AudioContext","stereoPannerNode","StereoPannerNode","pan","gainNode","createGain","audioBuffer","upAudioBuffer","eventLoopCount","initClick","fetch","click","arrayBuffer","clickArrayBuffer","clickUp","clickUpArrayBuffer","Promise","res","decodeAudioData","_","clickEventLoop","store","state","clickTimeSignature","beats","unit","clickInterval","getClickInterval","playPosition","bufferSource","createBufferSource","connect","destination","buffer","start","setClickPan","value","setClickEventLoopCount","count","setClickGain","gain","clickBpm","getClickBeats","Math","floor"],"mappings":"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","sourcesContent":["const audioContext = new AudioContext();\n\nconst stereoPannerNode = new StereoPannerNode(audioContext, {\n  pan: 0\n});\nconst gainNode = audioContext.createGain();\n\nlet audioBuffer = null;\nlet upAudioBuffer = null;\n\nlet eventLoopCount = 0;\n\n// Fetch click audio files\nexport async function initClick() {\n  const click = await fetch('./click.wav');\n  const clickArrayBuffer = await click.arrayBuffer();\n\n  const clickUp = await fetch('./click-accent.wav');\n  const clickUpArrayBuffer = await clickUp.arrayBuffer();\n\n  return new Promise(res => {\n    audioContext.decodeAudioData(clickArrayBuffer, _ => {\n      audioBuffer = _;\n\n      audioContext.decodeAudioData(clickUpArrayBuffer, _ => {\n        upAudioBuffer = _;\n\n        res();\n      });\n    });\n  });\n}\n\nexport function clickEventLoop(store) {\n  const { beats, unit } = store.state.clickTimeSignature;\n  if (!beats || !unit) {\n    return;\n  }\n\n  const clickInterval = getClickInterval(store.state);\n  if (store.state.playPosition / eventLoopCount > clickInterval) {\n    const bufferSource = audioContext.createBufferSource();\n    bufferSource\n      .connect(gainNode)\n      .connect(stereoPannerNode)\n      .connect(audioContext.destination);\n\n    if (eventLoopCount % beats === 0) {\n      bufferSource.buffer = upAudioBuffer;\n      bufferSource.start();\n    } else {\n      bufferSource.buffer = audioBuffer;\n      bufferSource.start();\n    }\n\n    eventLoopCount++;\n  }\n}\n\nexport function setClickPan(value) {\n  stereoPannerNode.pan.value = value;\n}\n\nexport function setClickEventLoopCount(count) {\n  eventLoopCount = count;\n}\n\nexport function setClickGain(value) {\n  gainNode.gain.value = value;\n}\n\nexport function getClickInterval(state) {\n  return 60 / (state.clickBpm * (state.clickTimeSignature.unit / 4));\n}\n\nexport function getClickBeats(state) {\n  const beats = Math.floor(state.playPosition / getClickInterval(state));\n  return [\n    Math.floor(beats / state.clickTimeSignature.beats),\n    (beats % state.clickTimeSignature.beats) + 1\n  ];\n}\n"]}]}