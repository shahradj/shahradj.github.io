{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shahrad/Documents/shahradj.github.io/src/components/TextField.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/components/TextField.vue","mtime":1692676096737},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/css-loader/dist/cjs.js","mtime":1692676095877},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1692676096509},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/postcss-loader/src/index.js","mtime":1692676096209},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/sass-loader/dist/cjs.js","mtime":1692676096413},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vuetify-loader/lib/loader.js","mtime":1692676096537},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692676095757},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js","mtime":1692676096509}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmlucHV0LXRoaW4gewogIG1hcmdpbjogMCAwLjVyZW07Cn0KLmlucHV0LXRoaW4gaW5wdXQgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["TextField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA","file":"TextField.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <VTextField\n    class=\"input-thin\"\n    single-line\n    hide-details\n    v-model=\"localValue\"\n    @keyup.enter=\"set\"\n    ref=\"textField\"\n  />\n</template>\n\n<script>\nexport default {\n  props: ['value'],\n  data() {\n    return {\n      localValue: this.value\n    };\n  },\n  watch: {\n    value(value) {\n      if (document.activeElement !== this.$refs.textField.$refs.input) {\n        this.localValue = value;\n      }\n    }\n  },\n  methods: {\n    set() {\n      this.$emit('input', this.localValue);\n      this.$refs.textField.blur();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.input-thin {\n  margin: 0 0.5rem;\n}\n.input-thin input {\n  text-align: center;\n}\n</style>\n"]}]}