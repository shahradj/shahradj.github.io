{"remainingRequest":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shahrad/Documents/shahradj.github.io/src/components/SongManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/shahrad/Documents/shahradj.github.io/src/components/SongManager.vue","mtime":1692681039869},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692677374760},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/babel-loader/lib/index.js","mtime":1692677374684},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vuetify-loader/lib/loader.js","mtime":1692677375528},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1692677374760},{"path":"/home/shahrad/Documents/shahradj.github.io/node_modules/vue-loader/lib/index.js","mtime":1692677375504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmFjayBmcm9tICcuL1RyYWNrJzsKaW1wb3J0IFNvbmcgZnJvbSAnLi9Tb25nJzsKaW1wb3J0IERyb3Bkb3duIGZyb20gJ3Z1ZS1zaW1wbGUtc2VhcmNoLWRyb3Bkb3duJzsKCnZhciBmaWxlcyA9IFsKICB7J2lkJzoxLAogICduYW1lJzondGVzdDEnLAogICdmaWxlcyc6IFsKICAgICd0ZXN0YS5tcDMnLAogICAgJ3Rlc3RiLm1wMycsCiAgICAndGVzdGMubXAzJywKICAgICd0ZXN0ZC5tcDMnCiAgXQp9LCAKeydpZCc6MiwKJ25hbWUnOid0ZXN0MicsCidmaWxlcyc6IFsKCl19Cl0KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBEcm9wZG93biwKICAgIFRyYWNrLAogICAgU29uZwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVzOiBbXSwKICAgICAgb3B0aW9uczogZmlsZXMKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUcmFja3MoZmlsZXMpIHsKICAgICAgaWYgKCFmaWxlcy5sZW5ndGgpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGZpbGVzLmZvckVhY2goZmlsZSA9PiB7CiAgICAgICAgY29uc3QgbmFtZSA9IGZpbGUubmFtZS5zdWJzdHJpbmcoMCwgZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykpOwogICAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgIGZpbGVSZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICAgICAgZmlsZVJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4gewogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZFRyYWNrJywgewogICAgICAgICAgICBuYW1lLAogICAgICAgICAgICBhcnJheUJ1ZmZlcjogZmlsZVJlYWRlci5yZXN1bHQKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgfSwKICAgIHZhbGlkYXRlU2VsZWN0aW9uKGV2ZW50KSB7CiAgICAgIGlmIChldmVudCkgewogICAgICAgIAogICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmZpbGVzKTsKCiAgICAgICAgZXZlbnQuZmlsZXMuZm9yRWFjaChmaWxlID0+IHsKICAgICAgICAgIGNvbnN0IGhlYWRlcnM9IHsnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonfQogICAgICAgICAgY29uc3QgbmFtZSA9ICdodHRwczovL2dpdGh1Yi5jb20vc2hhaHJhZGovc2hhaHJhZGouZ2l0aHViLmlvL2Jsb2IvbWFzdGVyL2RhdGEvJytldmVudC5uYW1lKycvJytmaWxlKyc/cmF3PXRydWUnOwogICAgICAgICAgY29uc3QgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICBjb25zdCBmaWxlY29udGVudCA9IGZldGNoKG5hbWUsIHtoZWFkZXJzfSkudGhlbihyZXMgPT4gcmVzLmJsb2IoKSkKICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF4aW9zLmdldCgnW2h0dHBzOi8vYXBpc2VydmljZS5jb21dKGh0dHBzOi8vYXBpc2VydmljZS5jb20pL3NlYXJjaCcsIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JywKICAgICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonIC8vIENvdWxkIHdvcmsgYW5kIGZpeCB0aGUgcHJldmlvdXMgcHJvYmxlbSwgYnV0IG5vdCBpbiBhbGwgQVBJcwogICAgICAgICAgICB9LAogICAgICAgICAgfSkKICAgICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZihmaWxlY29udGVudCkpCiAgICAgICAgICAvLyBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZWNvbnRlbnQpOwogICAgICAgICAgLy8gZmlsZVJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4gewogICAgICAgICAgLy8gICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWRkVHJhY2snLCB7CiAgICAgICAgICAvLyAgICAgbmFtZSwKICAgICAgICAgIC8vICAgICBhcnJheUJ1ZmZlcjogZmlsZVJlYWRlci5yZXN1bHQKICAgICAgICAgIC8vICAgfSk7CiAgICAgICAgICAvLyB9KTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmZpbGVzID0gW107CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["SongManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SongManager.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <Dropdown\n      :options=\"options\"\n      v-on:selected=\"validateSelection\"\n      :disabled=\"false\"\n      name=\"song\"\n      :maxItem=\"10\"\n      placeholder=\"Please select a song\"\n    >\n    </Dropdown>\n    <VFileInput\n      label=\"Tracks\"\n      @change=\"addTracks\"\n      :value=\"files\"\n      multiple\n      placeholder=\"Add audio files\"\n      accept=\"audio/*\"\n    />\n    <!-- <Song\n      v-for=\"(track, index) in $store.state.songs\"\n      :track=\"track\"\n      :number=\"index + 1\"\n      :key=\"track.id\"\n    /> -->\n  </div>\n</template>\n\n<script>\nimport Track from './Track';\nimport Song from './Song';\nimport Dropdown from 'vue-simple-search-dropdown';\n\nvar files = [\n  {'id':1,\n  'name':'test1',\n  'files': [\n    'testa.mp3',\n    'testb.mp3',\n    'testc.mp3',\n    'testd.mp3'\n  ]\n}, \n{'id':2,\n'name':'test2',\n'files': [\n\n]}\n]\nimport axios from 'axios';\n\nexport default {\n  components: {\n    Dropdown,\n    Track,\n    Song\n  },\n  data() {\n    return {\n      files: [],\n      options: files\n    };\n  },\n  methods: {\n    addTracks(files) {\n      if (!files.length) {\n        return;\n      }\n\n      files.forEach(file => {\n        const name = file.name.substring(0, file.name.lastIndexOf('.'));\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n        fileReader.addEventListener('load', () => {\n          this.$store.dispatch('addTrack', {\n            name,\n            arrayBuffer: fileReader.result\n          });\n        });\n      });\n      this.files = [];\n    },\n    validateSelection(event) {\n      if (event) {\n        \n        console.log(event.files);\n\n        event.files.forEach(file => {\n          const headers= {'Access-Control-Allow-Origin': '*'}\n          const name = 'https://github.com/shahradj/shahradj.github.io/blob/master/data/'+event.name+'/'+file+'?raw=true';\n          const fileReader = new FileReader();\n          const filecontent = fetch(name, {headers}).then(res => res.blob())\n          const res = await axios.get('[https://apiservice.com](https://apiservice.com)/search', {\n            headers: {\n              'Content-Type': 'application/json;charset=UTF-8',\n              'Access-Control-Allow-Origin': '*' // Could work and fix the previous problem, but not in all APIs\n            },\n          })\n          console.log(typeof(filecontent))\n          // fileReader.readAsDataURL(filecontent);\n          // fileReader.addEventListener('load', () => {\n          //   this.$store.dispatch('addTrack', {\n          //     name,\n          //     arrayBuffer: fileReader.result\n          //   });\n          // });\n        });\n        this.files = [];\n      }\n    }\n  }\n};\n</script>\n"]}]}